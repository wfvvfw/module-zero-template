@using Abp.Collections.Extensions
@model AbpCompanyName.AbpProjectName.WebMetronicGms.Models.Layout.TopMenuViewModel

<!-- BEGIN SIDEBAR MENU -->
<!-- DOC: Apply "page-sidebar-menu-light" class right after "page-sidebar-menu" to enable light sidebar menu style(without borders) -->
<!-- DOC: Apply "page-sidebar-menu-hover-submenu" class right after "page-sidebar-menu" to enable hoverable(hover vs accordion) sub menu mode -->
<!-- DOC: Apply "page-sidebar-menu-closed" class right after "page-sidebar-menu" to collapse("page-sidebar-closed" class must be applied to the body element) the sidebar sub menu mode -->
<!-- DOC: Set data-auto-scroll="false" to disable the sidebar from auto scrolling/focusing -->
<!-- DOC: Set data-keep-expand="true" to keep the submenues expanded -->
<!-- DOC: Set data-auto-speed="200" to adjust the sub menu slide up/down speed -->
<ul class="page-sidebar-menu   " data-keep-expanded="false" data-auto-scroll="true" data-slide-speed="200">
    <li class="nav-item start ">
        <a href="/" class="nav-link ">
            <i class="icon-bar-chart"></i>
            <span class="title">@L("Home")</span>
        </a>
    </li>

    @foreach (var moduleMenu in Model.MainMenu.Items) {
        <li class="heading">
                <h3 class="uppercase">@moduleMenu.DisplayName</h3>
           </li>
        if (!moduleMenu.Items.IsNullOrEmpty()) {
            foreach (var subMenuItem in moduleMenu.Items) {
                bool isActiveMenu = subMenuItem.Name == Model.ActiveMenuItemName ||
                                  (!subMenuItem.Items.IsNullOrEmpty()
                                   && subMenuItem.Items.Any(l => l.Name == Model.ActiveMenuItemName));

                <li class="nav-item @(isActiveMenu?"active open":"") ">
                    <a href="javascript:;" class="nav-link nav-toggle">
                        <i class="icon-layers"></i>
                        <span class="title">@subMenuItem.DisplayName</span>
                        <span class="selected"></span>
                        <span class="arrow open"></span>
                    </a>

                    @if (!subMenuItem.Items.IsNullOrEmpty()) {
                        <ul class="sub-menu">
                            @foreach (var pageMenu in subMenuItem.Items) {
                                bool isActivePage = subMenuItem.Name == Model.ActiveMenuItemName;

                                <li class="nav-item @(isActivePage?"active open":"") ">
                                    <a href="@pageMenu.Url" class="nav-link ">
                                        <i class="icon-layers"></i>
                                        <span class="title">@pageMenu.DisplayName</span>
                                    </a>
                                </li>
                            }
                        </ul>
                    }
                </li>
            }
        }

    }


</ul>